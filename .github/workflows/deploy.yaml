name: Deploy Adora to ECR

on: 
  push:
    branches: 
      - '**'

jobs:

  build: 

    name: Build image
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create env file
      run: |
        touch .env
        echo DB_MAIN_HOST=${{ secrets.DB_MAIN_HOST }} >> .env
        echo DB_MAIN_PORT=${{ secrets.DB_MAIN_PORT }} >> .env
        echo DB_MAIN_USER=${{ secrets.DB_MAIN_USER }} >> .env
        echo DB_MAIN_PASSWORD=${{ secrets.DB_MAIN_PASSWORD }} >> .env
        echo DB_MAIN_DATABASE=${{ secrets.DB_MAIN_DATABASE }} >> .env
        echo DB_MAIN_SCHEMA=${{ secrets.DB_MAIN_SCHEMA }} >> .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo DATABASE_SSL=true >> .env
        cat .env

    - name: Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-ecr
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: adora
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "criando $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG "
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "publicando em $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: executar ssh e rolling update da coisa
      uses: appleboy/ssh-action@master
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: adora
        IMAGE_TAG: ${{ github.sha }}
      with: 
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
        script: |
          $(aws ecr get-login --no-include-email --region us-east-2)
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker stop adora || true && docker rm adora || true
          docker run --rm -d -p 3100:3100 --name adora $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG